
include(ExternalProject)

if (ENABLE_NNDEPLOY_DEVICE_ARM_XNNPACK STREQUAL "OFF")
elseif (ENABLE_NNDEPLOY_DEVICE_ARM_XNNPACK STREQUAL "ON")
  # find_package(oneDNN REQUIRED)
  # include_directories(${oneDNN_INCLUDE_DIRS})
  # set(NNDEPLOY_THIRD_PARTY_LIBRARY ${NNDEPLOY_THIRD_PARTY_LIBRARY} ${oneDNN_LIBS})
else()
  # include_directories(${ENABLE_NNDEPLOY_DEVICE_ARM_XNNPACK}/include)
  # set(LIB_PATH ${ENABLE_NNDEPLOY_DEVICE_ARM_XNNPACK}/${NNDEPLOY_THIRD_PARTY_LIBRARY_PATH_SUFFIX})
  # set(NNDEPLOY_DEVICE_ARM_XNNPACK_LIBS "dnnl") # 重点部分
  # foreach(LIB ${NNDEPLOY_DEVICE_ARM_XNNPACK_LIBS})
  #   set(LIB_NAME ${NNDEPLOY_LIB_PREFIX}${LIB}${NNDEPLOY_LIB_SUFFIX})
  #   set(FULL_LIB_NAME ${LIB_PATH}/${LIB_NAME})
  #   if(IS_SYMLINK ${FULL_LIB_NAME})
  #     get_filename_component(REAL_LIB_NAME ${FULL_LIB_NAME} REALPATH)
  #     # message(STATUS "Real path of ${FULL_LIB_NAME}: ${REAL_LIB_NAME}")
  #     set(FULL_LIB_NAME ${REAL_LIB_NAME})
  #     # message(STATUS "Full lib name: ${FULL_LIB_NAME}")
  #   endif()
  #   set(NNDEPLOY_THIRD_PARTY_LIBRARY ${NNDEPLOY_THIRD_PARTY_LIBRARY} ${FULL_LIB_NAME})    
  # endforeach()
  # file(GLOB_RECURSE INSTALL_LIBS "${LIB_PATH}/*")
  # foreach(INSTALL_LIB ${INSTALL_LIBS})
  #   install(FILES ${INSTALL_LIB} DESTINATION ${NNDEPLOY_INSTALL_LIB_PATH})
  # endforeach()
  # if(SYSTEM_Windows)
  #   set(BIN_PATH ${ENABLE_NNDEPLOY_DEVICE_ARM_XNNPACK}/bin)
  #   link_directories(${BIN_PATH})
  #   file(GLOB_RECURSE INSTALL_BINS "${BIN_PATH}/*.dll")
  #   foreach(INSTALL_BIN ${INSTALL_BINS})
  #     install(FILES ${INSTALL_BIN} DESTINATION ${NNDEPLOY_INSTALL_BIN_PATH})
  #     file(COPY ${INSTALL_BIN} DESTINATION ${EXECUTABLE_OUTPUT_PATH})
  #   endforeach()
  # endif()
endif()