FROM nvcr.io/nvidia/tensorrt:22.12-py3

ENV DEBIAN_FRONTEND=noninteractive
WORKDIR /workspace

# ---- Install System Deps ----
    RUN apt-get update && apt-get install -y \
    build-essential cmake ninja-build git wget curl pkg-config \
    software-properties-common \
    libopencv-dev protobuf-compiler \
    ca-certificates gnupg lsb-release \
    && rm -rf /var/lib/apt/lists/*

# ---- Install Python 3.10 ----
RUN add-apt-repository ppa:deadsnakes/ppa && \
    apt-get update && \
    apt-get install -y python3.10 python3.10-dev python3.10-venv python3.10-distutils && \
    curl -sS https://bootstrap.pypa.io/get-pip.py | python3.10 && \
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.10 1 && \
    rm -rf /var/lib/apt/lists/*

# ---- Install Python Libraray ----
RUN python3 -m pip install --upgrade pip
RUN pip install pybind11 setuptools wheel cython requests pathlib packaging

# ---- Install Rust（Optional）----
RUN curl https://sh.rustup.rs -sSf | bash -s -- -y \
    && . "$HOME/.cargo/env" \
    && rustup install 1.88.0 \
    && rustup default 1.88.0 \
    && rustup target add x86_64-unknown-linux-gnu

ENV PATH="/root/.cargo/bin:${PATH}"


# ---- Clone nndeploy Project（Include Submodules）----
# RUN git clone --recursive https://github.com/nndeploy/nndeploy.git . && \
#     git pull origin main

# ---- Copy all project files to workspace ----
COPY . /workspace/

# ---- Install OpenCV + ONNX Runtime ----
RUN cd tool/script && \
    python3 install_opencv.py

# RUN cd tool/script && \
#     python3 install_onnxruntime.py

# ---- Install OpenVINO from local file ----
# COPY tool/script/download/l_openvino_toolkit_ubuntu20_2023.1.0.12185.47b736f63ed_x86_64.tgz /workspace/tool/script/download

RUN cd tool/script && \
    python3 install_openvino.py

# ---- Install OpenVINO from Intel Repository ----
# RUN mkdir -p /etc/apt/keyrings && \
#     wget -qO- https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB | \
#     gpg --dearmor -o /etc/apt/keyrings/intel-sw-products.gpg && \
#     echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/intel-sw-products.gpg] https://apt.repos.intel.com/openvino/2023 ubuntu22 main" | \
#     tee /etc/apt/sources.list.d/intel-openvino-2023.list && \
#     apt-get update && \
#     apt-get install -y --no-install-recommends \
#         libopenvino-2023.1.0 \
#         libopenvino-dev-2023.1.0 \
#         python3-openvino-2023.1.0 && \
#     rm -rf /var/lib/apt/lists/*

# ---- Build C++ and Install Python Module ----
RUN rm -rf build && \
    mkdir build && \
    cp cmake/config_opencv_ort_ov_trt_tokenizer.cmake build/config.cmake && \
    cd build && \
    cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_POLICY_VERSION_MINIMUM=3.5 .. && \
    make -j$(nproc) && \
    make install

# ---- Install Python Package ----
RUN cd python && \
    pip install -e .

# RUN echo "/workspace/python/nndeploy" > /etc/ld.so.conf.d/nndeploy.conf && ldconfig

# ---- Default Interface ----
WORKDIR /workspace/
CMD ["python3", "app.py"]
